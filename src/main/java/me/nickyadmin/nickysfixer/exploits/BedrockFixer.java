package me.nickyadmin.nickysfixer.exploits;

import me.nickyadmin.nickysfixer.Main;
import org.bukkit.Chunk;
import org.bukkit.Material;
import org.bukkit.World;
import org.bukkit.configuration.file.FileConfiguration;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.world.ChunkLoadEvent;

public class BedrockFixer implements Listener {
    private final Main plugin;

    public BedrockFixer(Main plugin) {
        this.plugin = plugin;
    }

    @EventHandler
    private void onChunkLoadEvent(ChunkLoadEvent evt) {
        FileConfiguration config = plugin.getConfig();

        if (config.getBoolean("fix-bedrock-holes")) {
            Chunk chunk = evt.getChunk();
            if (!evt.isNewChunk()) {
                if (!chunk.getWorld().getEnvironment().equals(World.Environment.THE_END)) {
                    int chunkx = chunk.getX() << 4;
                    int chunkz = chunk.getZ() << 4;
                    for (int x = chunkx; x < chunkx + 16; x++) {
                        for (int z = chunkz; z < chunkz + 16; z++) {
                            for (int y = 0; y < 128; y++) {
                                if (y == 0) {
                                    if (chunk.getBlock(x, y, z).getType() != Material.BEDROCK) {
                                        chunk.getBlock(x, y, z).setType(Material.BEDROCK);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        if (config.getBoolean("fix-bedrock-holes")) {
            Chunk chunk = evt.getChunk();
            if (!evt.isNewChunk()) {
                if (chunk.getWorld().getEnvironment().equals(World.Environment.NETHER)) {
                    int chunkx = chunk.getX() << 4;
                    int chunkz = chunk.getZ() << 4;
                    for (int x = chunkx; x < chunkx + 16; x++) {
                        for (int z = chunkz; z < chunkz + 16; z++) {
                            for (int y = 0; y < 128; y++) {
                                if (y == 127) {
                                    if (chunk.getBlock(x, y, z).getType() != Material.BEDROCK) {
                                        chunk.getBlock(x, y, z).setType(Material.BEDROCK);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}